{"version":3,"sources":["../src/app.js","../src/app.html","../src/auth-config.js","../src/environment.js","../src/main.js","../src/modules/components/editUser.html","../src/modules/components/gadgetsForm.html","../src/modules/components/gadgetsTable.html","../src/modules/components/widgetsForm.html","../src/modules/components/widgetsTable.html","../src/modules/home.js","../src/modules/home.html","../src/modules/users.js","../src/modules/users.html","../src/modules/widgets.js","../src/modules/widgets.html","../src/resources/data/data-services.js","../src/resources/data/user-object.js","../src/resources/data/widget-object.js","../src/resources/elements/flat-picker.js","../src/resources/elements/flat-picker.html","../src/resources/elements/nav-bar.js","../src/resources/elements/nav-bar.html","../src/resources/index.js","../src/resources/value-converters/date-format.js","../src/resources/value-converters/filter-gadgets.js"],"names":["App","configureRouter","config","router","title","map","route","name","moduleId","auth","authConfig","baseUrl","loginUrl","tokenName","authHeader","authToken","logoutRedirect","debug","testing","configure","aurelia","use","standardConfiguration","plugin","baseConfig","feature","developmentLogging","environment","start","then","setRoot","Home","Router","message","login","navigate","Users","User","users","newUser","user","fname","lname","active","role","email","password","save","saveUser","logout","Widgets","Widget","widget","statuses","isCheckedCompleted","showForm","attached","getWidgets","updateWidget","selectedWidget","saveWidget","newWidget","editWidget","deleteWidget","_id","Cancel","DataServices","HttpClient","http","httpClient","BASE_URL","withBaseUrl","withDefaults","credentials","headers","localStorage","getItem","withInterceptor","request","response","get","url","fetch","json","data","catch","error","post","content","method","body","object","put","delete","USER_SERVICE","serverResponse","WIDGET_SERVICE","Boo","Hoo","Date","userid","widgetsArray","id","FlatPickerCustomElement","Element","defaultBindingMode","bindingMode","twoWay","element","backgroundColor","bind","defaultConfig","altInput","altFormat","minDate","startdate","maxDate","enddate","wrap","onReady","dateObj","dateStr","instance","$cal","$","calendarContainer","find","length","append","on","clear","close","_config","Object","assign","onChange","onMonthChange","onYearChange","flatpickr","Flatpickr","querySelector","valueChanged","fireEvent","type","changeEvent","window","CustomEvent","detail","value","bubbles","document","createEvent","initCustomEvent","dispatchEvent","startdateChanged","newValue","oldValue","set","enddateChanged","selectedDates","_datesAreSynced","undefined","_cloneDate","d","date","newDate","Array","isArray","setDate","model","view","modelDates","modelDate","findIndex","v","valueOf","viewDate","m","getTime","bindable","NavBar","AuthService","authenticated","loginError","removeClass","parent","addClass","userObj","sessionStorage","setItem","JSON","stringify","isAuthenticated","console","log","removeItem","globalResources","DateFormatValueConverter","toView","format","FilterWidgetsValueConverter","widgets","nofilterWidgets","filteredWidgets","forEach","status","push"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {AuthorizeStep} from 'aurelia-auth';\n\nexport class App {\n  configureRouter(config, router) {\n    this.router = router;\n    // config.addPipelineStep('authorize', AuthorizeStep); \n    config.title = 'Widgets Universe!';\n    config.map([\n      {\n        route: ['', 'widgets'],\n        name: 'widgets',\n        moduleId: 'modules/widgets',\n        title: 'Widgets',\n        auth: false\n      }\n    ]);\n  }\n}\n","<template>\n  <router-view></router-view>\n</template>\n","var authConfig = {\r\n    baseUrl: \"http://localhost:5000/api\",\r\n    loginUrl: '/users/login',\r\n    tokenName: 'token',\r\n    authHeader: 'Authorization',\r\n    authToken: '',\r\n    logoutRedirect: '#/home'\r\n  }\r\n  \r\n  export default authConfig;\r\n  ","export default {\n  debug: true,\n  testing: true\n};\n","// regenerator-runtime is to support async/await syntax in ESNext.\n// If you don't use async/await, you can remove regenerator-runtime.\nimport 'regenerator-runtime/runtime';\nimport environment from './environment';\nimport config from './auth-config';\n\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .plugin('aurelia-auth', (baseConfig) => {\n      baseConfig.configure(config);\n    })\n\n    .feature('resources');\n\n  aurelia.use.developmentLogging(environment.debug ? 'debug' : 'warn');\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","<template>\r\n            First Name: <input value.bind=\"user.fname\">\r\n            Last Name: <input value.bind=\"user.lname\">\r\n            Active: <input value.bind=\"user.active\">\r\n            Role: <input value.bind=\"user.role\">\r\n            Email: <input value.bind=\"user.email\">\r\n            Password: <input value.bind=\"user.password\">\r\n            <button click.trigger=\"save()\">Save</button>\r\n        </template>\r\n        ","<template>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"widgetInput\">Boo</label>\r\n            <input value.bind=\"widget.selectedWidget.Boo\" type=\"text\" class=\"form-control\" placeholder=\"Boo title\">\r\n        </div>\r\n      \r\n            <!--         <div class =\"form-group\">\r\n                <label for=\"widgetDetail\">Hoo</label>\r\n                <textarea value.bind=\"widget.selectedWidget.Hoo\" class=\"form-control\" placeholder=\"Hoo Number\" id=\"widgetDetail\" rows=\"1\"></textarea> -->\r\n             <!-- <div class=\"form-group\">\r\n                <label for=\"gadgetStatus\">Status</label>\r\n                <select value.bind=\"gadget.selectedGadget.status\" class=\"form-control\" id=\"gadgetStatus\">\r\n                    <option repeat.for=\"status of statuses\" model.bind=\"status\">${status}</option>\r\n                </select>\r\n            </div>\r\n        </div> -->\r\n        <div class=\"form-group\">\r\n                <label for=\"widgetDetail\">Hoo</label>\r\n                <flat-picker controlid=\"startdate\" value.bind=\"widget.selectedWidget.Hoo\"></flat-picker>\r\n            </div>\r\n            <button class=\"btn btn-primary\" click.trigger=\"saveWidget()\">Save</button>\r\n            <button class=\"btn btn-primary\" click.trigger=\"Cancel()\">Cancel</button>\r\n    </form>\r\n</template>","<template>\r\n    <button class=\"btn btn-primary\" click.trigger=\"newWidget()\" style=\"margin-bottom:10px;\">Create Widget</button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <!-- <tr>\r\n                <th colspan=\"3\">\r\n                    <div class=\"checkbox leftMargin\"><label><input checked.bind=\"isCheckedCompleted\" type=\"checkbox\">\r\n                            Filter out Completed Gadgets</label></div>\r\n                </th>\r\n            </tr> -->\r\n            <tr>\r\n                 <th scope=\"col\">Boo</th>\r\n                <th scope=\"col\">Hoo</th>\r\n                <!-- <th scope=\"col\">Status</th> -->\r\n                        <th></th>\r\n                      \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr repeat.for=\"widget of widget.widgetsArray | filterWidgets:isCheckedCompleted\">\r\n                    <td scope=\"row\" click.delegate=\"editWidget(widget)\">${widget.Boo}</td>\r\n                <td scope=\"row\" click.delegate=\"editWidget(widget)\">${widget.Hoo}</td>\r\n                <!-- <td><select change.delegate=\"updateGadget(gadget)\" value.bind=\"gadget.status\" class=\"form-control\"\r\n                        id=\"gadgetStatus\">\r\n                        <option repeat.for=\"status of statuses\" value.bind=\"status\">${status}</option>\r\n                    </select></td> -->\r\n                <!-- <td>${gadget.dateDue | dateFormat}</td> -->\r\n                <td>\r\n                    <button click.trigger=\"deleteWidget(widget)\" type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>","<template>\r\n    <form>\r\n        <div class=\"form-group\">\r\n            <label for=\"widgetInput\">Boo</label>\r\n            <input value.bind=\"widget.selectedWidget.Boo\" type=\"text\" class=\"form-control\" placeholder=\"Boo title\">\r\n        </div>\r\n      \r\n                    <div class =\"form-group\">\r\n                <label for=\"widgetDetail\">Hoo</label>\r\n                <textarea value.bind=\"widget.selectedWidget.Hoo\" class=\"form-control\" placeholder=\"Hoo Number\" id=\"widgetDetail\" rows=\"1\"></textarea>\r\n             <!-- <div class=\"form-group\">\r\n                <label for=\"gadgetStatus\">Status</label>\r\n                <select value.bind=\"gadget.selectedGadget.status\" class=\"form-control\" id=\"gadgetStatus\">\r\n                    <option repeat.for=\"status of statuses\" model.bind=\"status\">${status}</option>\r\n                </select>\r\n            </div>\r\n        </div> -->\r\n        <!-- <div class=\"form-group\">\r\n                <label for=\"gadgetStatus\">Due Date</label>\r\n                <flat-picker controlid=\"startdate\" value.bind=\"gadget.selectedGadget.dateDue\"></flat-picker> -->\r\n            </div>\r\n            <button class=\"btn btn-primary\" click.trigger=\"saveWidget()\">Save</button>\r\n            <button class=\"btn btn-primary\" click.trigger=\"Cancel()\">Cancel</button>\r\n    </form>\r\n</template>","<template>\r\n    <button class=\"btn btn-primary\" click.trigger=\"newWidget()\" style=\"margin-bottom:10px;\">Create Widget</button>\r\n    <table class=\"table\">\r\n        <thead>\r\n            <!-- <tr>\r\n                <th colspan=\"3\">\r\n                    <div class=\"checkbox leftMargin\"><label><input checked.bind=\"isCheckedCompleted\" type=\"checkbox\">\r\n                            Filter out Completed Gadgets</label></div>\r\n                </th>\r\n            </tr> -->\r\n            <tr>\r\n                 <th scope=\"col\">Boo</th>\r\n                <th scope=\"col\">Hoo</th>\r\n                <!-- <th scope=\"col\">Status</th> -->\r\n                        <th></th>\r\n                      \r\n            </tr>\r\n        </thead>\r\n        <tbody>\r\n            <tr repeat.for=\"widget of widget.widgetsArray | filterWidgets:isCheckedCompleted\">\r\n                    <td scope=\"row\" click.delegate=\"editWidget(widget)\">${widget.Boo}</td>\r\n                <td scope=\"row\" click.delegate=\"editWidget(widget)\">${widget.Hoo}</td>\r\n                <!-- <td><select change.delegate=\"updateGadget(gadget)\" value.bind=\"gadget.status\" class=\"form-control\"\r\n                        id=\"gadgetStatus\">\r\n                        <option repeat.for=\"status of statuses\" value.bind=\"status\">${status}</option>\r\n                    </select></td> -->\r\n                <!-- <td>${gadget.dateDue | dateFormat}</td> -->\r\n                <td>\r\n                    <button click.trigger=\"deleteWidget(widget)\" type=\"button\" class=\"btn btn-danger btn-sm\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</template>","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\n\r\n@inject(Router)\r\nexport class Home {\r\n  constructor(router) {\r\n    this.router = router;\r\n    this.message = 'Home';\r\n  }\r\n\r\n  login() {\r\n    this.router.navigate('users');\r\n  }\r\n}\r\n","<template>\r\n\t<h1>${message}</h1>\r\n\t<button class=\"btn btn-primary\" click.trigger=\"login()\">Login</button>\r\n</template>\r\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { User } from '../resources/data/user-object';\r\n\r\n@inject(Router, User)\r\nexport class Users {\r\n\r\n    constructor(router, users) {\r\n        this.router = router;\r\n        this.users = users;\r\n        this.message = 'Users';\r\n    }\r\n    newUser() {\r\n        this.user = {\r\n            fname: \"\",\r\n            lname: \"\",\r\n            active: true,\r\n            role: \"user\",\r\n            email: \"\",\r\n            password: \"\"\r\n        }\r\n    }\r\n    async save() {\r\n        if (this.user && this.user.fname && this.user.lname\r\n            && this.user.email && this.user.password) {\r\n            await this.users.saveUser(this.user);\r\n        }\r\n    }\r\n    logout() {\r\n        this.router.navigate('home');\r\n    }\r\n}\r\n","<template>\r\n        <h1>${message}</h1>\r\n        <button click.trigger=\"newUser()\">New User</button>\r\n         <compose view=\"./components/editUser.html\"></compose>\r\n</template>","import { inject } from 'aurelia-framework';\r\nimport { Widget } from \"../resources/data/widget-object\";\r\n\r\n@inject(Widget)\r\nexport class Widgets {\r\n    constructor(widget) {\r\n        this.widget = widget;\r\n        //this.userObj = JSON.parse(sessionStorage.getItem('userObj'));\r\n        this.statuses = ['Widget', 'In Process', 'Completed'];\r\n        this.isCheckedCompleted = true;\r\n        this.showForm = false;\r\n    }\r\n    async attached() {\r\n        await this.getWidgets();\r\n    }\r\n\r\n    async getWidgets() {\r\n        await this.widget.getWidgets();\r\n        this.showForm = false;\r\n    }\r\n\r\n    updateWidget(widget) {\r\n        this.widget.selectedWidget = widget;\r\n        this.saveWidget();\r\n    }\r\n    newWidget() {\r\n        this.widget.newWidget();\r\n        this.showForm = true;\r\n    }\r\n    editWidget(widget) {\r\n        this.widget.selectedWidget = widget;\r\n        this.showForm = true;\r\n    }\r\n    async saveWidget() {\r\n        await this.widget.saveWidget()\r\n        this.getWidgets();\r\n    }\r\n    async deleteWidget(widget) {\r\n        await this.widget.deleteWidget(widget._id);\r\n        this.getWidgets();\r\n    }\r\n\r\n    Cancel() {\r\n        this.showForm = false;\r\n    }\r\n\r\n}","<template>\r\n    <div class=\"container\" style=\"margin-top:75px;\">\r\n        <compose show.bind=\"!showForm\" view=\"./components/gadgetsTable.html\"></compose>\r\n        <compose show.bind=\"showForm\" view=\"./components/gadgetsForm.html\"></compose>\r\n    </div>\r\n</template>\r\n","import { inject } from 'aurelia-framework';\r\nimport { HttpClient, json } from 'aurelia-fetch-client';\r\n\r\n@inject(HttpClient)\r\nexport class DataServices {\r\n\r\n    constructor(http) {\r\n        this.httpClient = http;\r\n        this.BASE_URL = \"http://localhost:5000/api/\";\r\n        this.httpClient.configure(config => {\r\n            config\r\n                .withBaseUrl(this.BASE_URL)\r\n                .withDefaults({\r\n                    credentials: 'same-origin',\r\n                    headers: {\r\n                        'Accept': 'application/json',\r\n                        'X-Requested-With': 'Fetch',\r\n                        'Authorization' : 'Bearer' + localStorage.getItem('aurelia_token')\r\n                    }\r\n                })\r\n                .withInterceptor({\r\n                    request(request) {\r\n                        //console.log('Requesting ${request.method} ${request.url}');\r\n                        return request;\r\n                    }, \r\n                    response(response) {\r\n                       // console.log('Received ${response.status} ${response.url}');\r\n                        return response;\r\n                    }\r\n                });\r\n        });\r\n\r\n    }\r\n    get(url) {\r\n        return this.httpClient.fetch(url)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                return data;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    post(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'post',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    put(content, url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'put',\r\n                body: json(content)\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n    delete(url) {\r\n        return this.httpClient\r\n            .fetch(url, {\r\n                method: 'delete'\r\n            })\r\n            .then(response => response.json())\r\n            .then(object => {\r\n                return object;\r\n            })\r\n            .catch(error => {\r\n                return error;\r\n            });\r\n    }\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n@inject(DataServices)\r\nexport class User {\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.USER_SERVICE = 'users';\r\n    }\r\nasync saveUser(user){\r\n    if(user){\r\n  let serverResponse = await this.data.post(user, this.USER_SERVICE);\r\n         return serverResponse;\r\n }\r\n}\r\n\r\n}\r\n","import {inject} from 'aurelia-framework';\r\nimport {DataServices} from './data-services';\r\n@inject(DataServices)\r\nexport class Widget {\r\nconstructor(data) {\r\n        this.data = data;\r\n        this.WIDGET_SERVICE = 'widgets';\r\n    }\r\n newWidget(){\r\n        this.selectedWidget = {};\r\n    this.selectedWidget.Boo=\"\";\r\n   // this.selectedWidget.Hoo=\"\";\r\n    //     this.selectedGadget.gadget= \"\";\r\n    //     this.selectedGadget.detail = \"\";\r\n       this.selectedWidget.Hoo = new Date();\r\n        //this.selectedGadget.status = \"Gadget\";\r\n        //this.selectedGadget.userId = id;\r\n    //this.selectedGadget.userObj=\"\";\r\n      }\r\n    \u000b  async saveWidget() {\r\n        let serverResponse;\r\n        if (this.selectedWidget) {\r\n          if (this.selectedWidget._id) {\r\n            let url = this.WIDGET_SERVICE + \"/\" + this.selectedWidget._id;\r\n            serverResponse = await this.data.put(this.selectedWidget, url);\r\n          } else {\r\n            serverResponse = await this.data.post(this.selectedWidget, this.WIDGET_SERVICE);\r\n          }\r\n          return serverResponse;\r\n    \r\n        }\r\n      }\r\n    async getWidgets(userid) {\r\n        this.widgetsArray = [];\r\n            let url = this.WIDGET_SERVICE;// + '/user/' + userid;\r\n            let response = await this.data.get(url);\r\n            if (!response.error) {\r\n              this.widgetsArray = response;\r\n            } else {\r\n              this.widgetsArray = [];\r\n            }\r\n          }\r\n        \r\n        async deleteWidget(id){\r\n            let url = this.WIDGET_SERVICE + \"/\" + id;\r\n                await this.data.delete(url);\r\n         \r\n        }\r\n }\r\n\r\n\r\n\r\n","import {inject, bindable, bindingMode} from 'aurelia-framework';\r\nimport Flatpickr from 'flatpickr';\r\n\r\n\r\n@inject(Element)\r\nexport class FlatPickerCustomElement {\r\n    backgroundColor = 'white';\r\n    @bindable config = {};\r\n    @bindable startdate;\r\n    @bindable enddate\r\n    @bindable controlid;\r\n    @bindable disabled;\r\n    @bindable({defaultBindingMode: bindingMode.twoWay}) value;\r\n\r\n    constructor(element) {\r\n        this.element = element;\r\n    }\r\n\r\n\tbind() {\r\n\t\tconst defaultConfig = {\r\n\t\t\taltInput: true,\r\n\t\t\taltFormat: \"F j, Y\",\r\n\t\t\tminDate: this.startdate,\r\n            maxDate: this.enddate,\r\n            wrap: true,\r\n            onReady: function(dateObj, dateStr, instance) {\r\n                var $cal = $(instance.calendarContainer);\r\n                if ($cal.find('.flatpickr-clear').length < 1) {\r\n                    $cal.append('<div class=\"flatpickr-clear\">Clear</div>');\r\n                    $cal.find('.flatpickr-clear').on('click', function() {\r\n                        instance.clear();\r\n                        instance.close();\r\n                    });\r\n                }\r\n            }\r\n\t\t};\r\n\r\n\t\tthis._config = Object.assign({}, defaultConfig, this.config);\r\n\t\tthis._config.onChange = this._config.onMonthChange = this._config.onYearChange = this.onChange.bind(this);\r\n\t}\r\n\r\n\tattached() {\r\n\t\tthis.flatpickr = new Flatpickr(this.element.querySelector('.aurelia-flatpickr'), this._config);\r\n\t\tthis.valueChanged();\r\n\t}\r\n\r\n\tfireEvent(element, type, data) {\r\n\t\t   let changeEvent;\r\n\r\n\t\t\tif (window.CustomEvent) {\r\n\t\t\t\tchangeEvent = new CustomEvent('change', {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tvalue: data\r\n\t\t\t\t\t},\r\n\t\t\t\t\tbubbles: true\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tchangeEvent = document.createEvent('CustomEvent');\r\n\t\t\t\tchangeEvent.initCustomEvent('change', true, true, {\r\n\t\t\t\t\tdetail: {\r\n\t\t\t\t\t\tvalue: data\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t\tthis.element.dispatchEvent(changeEvent);\r\n\t}\r\n\r\n\tstartdateChanged(newValue, oldValue) {\r\n\t\tif(this.flatpickr){\r\n\t\t\tthis.flatpickr.set(\"minDate\", newValue);\r\n\t\t}\r\n\t}\r\n\r\n\tenddateChanged(newValue, oldValue) {\r\n\t\tif(this.flatpickr){\r\n\t\t\tthis.flatpickr.set(\"maxDate\", newValue);\r\n\t\t}\r\n    }\r\n\r\n    onChange(selectedDates, dateStr, instance) {\r\n        if (!this._datesAreSynced(this.value, selectedDates)) {\r\n\r\n            switch(selectedDates.length) {\r\n                case 0:\r\n                    this.value = undefined;\r\n                    break;\r\n                case 1:\r\n                    this.value = this._cloneDate(selectedDates[0]);\r\n                    break;\r\n                default:\r\n                    this.value = selectedDates.map(d => this._cloneDate(d));\r\n                    break;\r\n            }\r\n        }\r\n\t\tthis.fireEvent(this.element, 'changeBeginDate', { date: this.value });\r\n    }\r\n\r\n    clear(){\r\n         if (!this.flatpickr) {\r\n            return;\r\n        }\r\n\r\n        // this.flatpickr.clear();\r\n    }\r\n\r\n    valueChanged() {\r\n        if (!this.flatpickr) {\r\n            return;\r\n        }\r\n\r\n        if (this._datesAreSynced(this.value, this.flatpickr.selectedDates)) {\r\n            return;\r\n        }\r\n\r\n        let newDate;\r\n\r\n        if (!this.value) {\r\n            newDate = undefined;\r\n        }\r\n        else if (!Array.isArray(this.value)) {\r\n            newDate = this._cloneDate(this.value);\r\n        }\r\n        else {\r\n            newDate = this.value.map(d => this._cloneDate(d));\r\n        }\r\n\r\n        this.flatpickr.setDate(newDate);\r\n    }\r\n\r\n    _datesAreSynced(model, view) {\r\n        model = model || [];\r\n\r\n        let modelDates = Array.isArray(model) ? model : [model];\r\n\r\n        for(let d = 0; d < modelDates.length; d++) {\r\n            let modelDate = modelDates[d];\r\n\r\n            if (view.findIndex(v => v.valueOf() === modelDate.valueOf()) > -1) {\r\n                continue;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        for(let d = 0; d < view.length; d++) {\r\n            let viewDate = view[d];\r\n\r\n            if (modelDates.findIndex(m => m.valueOf() === viewDate.valueOf()) > -1) {\r\n                continue;\r\n            }\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    _cloneDate(d) {\r\n        return new Date(d.getTime ? d.valueOf() : d);\r\n    }\r\n}\r\n","<template>\n    <style>\n      .aurelia-flatpickr {\n        background-color: white !important;\n      }\n      .disable{\n        background-color: #eeeeee;\n      }\n    </style>\n    <require from=\"flatpickr/flatpickr.css\"></require>\n     <div class=\"input-group aurelia-flatpickr\">\n      <input type=\"text\" class=\"aurelia-flatpickr form-control enable\" placeholder=\"Select date\" data-input>\n      <span class=\"input-group-btn\">\n        <button style=\"height:39px;\" class=\"btn btn-default\" type=\"button\" data-clear><i class=\"fa fa-trash fa-border\"></i></button>\n      </span>\n  </div>\n</template>\n","import { inject } from 'aurelia-framework';\r\nimport { Router } from 'aurelia-router';\r\nimport { AuthService } from 'aurelia-auth';\r\n\r\n@inject(Router, AuthService)\r\nexport class NavBar {\r\n    constructor(router, auth) {\r\n        this.authenticated = false;\r\n        this.router = router;\r\n        this.auth = auth;\r\n        this.loginError = '';\r\n        this.email = \"\";\r\n        this.password = \"\";\r\n\r\n    }\r\n\r\n    attached() {\r\n        $('.navbar-nav a').on('click', function () {\r\n            $('.navbar-nav').find('li.active').removeClass('active');\r\n            $(this).parent('li').addClass('active');\r\n        });\r\n    }\r\n\r\n    login() {\r\n        //   console.log(this.email);\r\n        //   console.log(this.password);\r\n        //  this.authenticated = true;\r\n        //  this.router.navigate('home');\r\n        return this.auth.login(this.email, this.password)\r\n            .then(response => {\r\n                this.userObj = response.user;\r\n                sessionStorage.setItem(\"userObj\", JSON.stringify(this.userObj));\r\n                this.loginError = \"\";\r\n                this.authenticated = this.auth.isAuthenticated();\r\n                this.router.navigate('home');\r\n            })\r\n            .catch(error => {\r\n                console.log(error);\r\n                this.authenticated = false;\r\n                this.loginError = \"Invalid credentials.\";\r\n            });\r\n\r\n    }\r\n   \r\n    \r\n    logout() {\r\n        // this.authenticated = false;\r\n        //  this.router.navigate('landing');\r\n        this.auth.logout();\r\n        sessionStorage.removeItem('userObj');\r\n        this.authenticated = this.auth.isAuthenticated();\r\n\r\n    }\r\n    bind() {\r\n        this.authenticated = this.auth.isAuthenticated();\r\n    }\r\n}\r\n","<template>\r\n  <nav class=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n    <a class=\"navbar-brand\" href=\"#\">Widgets Universe!</a>\r\n    <button class=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\"\r\n        aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span class=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n        <div class=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n        <ul class=\"navbar-nav mr-auto\">\r\n            <li class=\"nav-item active\">\r\n                <a class=\"nav-link\" href=\"#users\">Users <span class=\"sr-only\">(current)</span></a>\r\n            </li>\r\n                     <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#widgets\">Widgets</a>\r\n            </li>\r\n                    <li class=\"nav-item\">\r\n                <a class=\"nav-link\" href=\"#logout\">Logout</a>\r\n            </li>\r\n                 \r\n        </ul>\r\n        <div show.bind=\"!authenticated\">\r\n            <form class=\"form-inline\">\r\n                <div class=\"form-group mb-2\">\r\n                    <label for=\"staticEmail2\" class=\"sr-only\">Email</label>\r\n                    <input value.bind=\"email\" type=\"text\" class=\"form-control\" id=\"staticEmail2\"\r\n                        placeholder=\"email@example.com\">\r\n                </div>\r\n                <div class=\"form-group mx-sm-3 mb-2\">\r\n                    <label for=\"inputPassword2\" class=\"sr-only\">Password</label>\r\n                    <input value.bind=\"password\" type=\"password\" class=\"form-control\" id=\"inputPassword2\"\r\n                        placeholder=\"Password\">\r\n                </div>\r\n                <button type=\"submit\" click.trigger=\"login()\" class=\"btn btn-primary mb-2\">Confirm identity</button>\r\n                <span style=\"margin-left: 20px;\" show.bind=\"loginError\">${loginError}</span>\r\n            </form>\r\n        </div>   \r\n    </div>\r\n      </nav>\r\n</template>","export function configure(config) {\n  config.globalResources([\n   './elements/nav-bar',\n   './elements/flat-picker',\n   './value-converters/date-format',\n   './value-converters/filter-widgets',\n  ]);\n}\n","import moment from 'moment';\r\n\u000bexport class DateFormatValueConverter {\r\n\u000b  toView(value) {\r\n    if(value === undefined || value === null){\r\n      return;\r\n    }\r\n\u000b    return moment(value).format('MMM Do YYYY');\r\n  }\r\n}\r\n","export class FilterWidgetsValueConverter {\r\n      toView(widgets, nofilterWidgets) {\r\n        if (!widgets) return;\r\n        if (nofilterWidgets) return widgets;\r\n    \u000b    let filteredWidgets = [];\r\n        widgets.forEach(widget => {\r\n          if (widget.status !== 'Completed') filteredWidgets.push(widget);\r\n        });\r\n        return filteredWidgets;\r\n      }\r\n    }\r\n    "]}